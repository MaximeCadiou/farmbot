// automatically generated by Xtext
grammar org.xtext.example.farmbot.MyFarmbot with org.eclipse.xtext.common.Terminals

import "platform:/resource/farmbot-modeling/model/farmbot_modeling.ecore" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Farmbot returns Farmbot:
	{Farmbot}
	(instruction+=Instruction)+
	;

Instruction returns Instruction:
	TurnOn | TurnOff | MoveRelative | FindHome | Sequence | If | MoveAbsolute | ExecuteSequence | Wait | IsToolOn | SendMessage | RunFarmware | TakePhoto | Schedule | ListPeripherals | ListSequences;


SequenceInstruction returns SequenceInstruction:
	TurnOn | TurnOff | MoveRelative | FindHome | If | MoveAbsolute | ExecuteSequence | Wait | IsToolOn | SendMessage | RunFarmware | TakePhoto | Schedule | ListPeripherals | ListSequences;

BooleanExpression returns BooleanExpression:
	IsToolOn | IsEqualTo | IsNotEqualTo | IsGreaterThan | IsLowerThan;


TurnOn returns TurnOn:
	{TurnOn}
	'TurnOn'
	'{'
		('pin' pin=EInt)?
		('mode' mode=EString)?
	'}';

TurnOff returns TurnOff:
	{TurnOff}
	'TurnOff'
	'{'
		('pin' pin=EInt)?
		('mode' mode=EString)?
	'}';

MoveRelative returns MoveRelative:
	{MoveRelative}
	'MoveRelative'
	'{'
		('x' x=EInt)?
		('y' y=EInt)?
		('z' z=EInt)?
		('speed' speed=EDouble)?
	'}';

FindHome returns FindHome:
	{FindHome}
	(findX?='findX')?
	(findY?='findY')?
	(findZ?='findZ')?
	'FindHome'
	;

Sequence returns Sequence:
	{Sequence}
	'Sequence'
	name=EString
	'{'
		('if' '{' if+=If ( "," if+=If)* '}' )?
		('sequenceinstruction' '{' sequenceinstruction+=SequenceInstruction ( "," sequenceinstruction+=SequenceInstruction)* '}' )?
	'}';

If returns If:
	'if' booleanexpression=BooleanExpression
	'then' then=ExecuteSequence
	('else' else=ExecuteSequence)?
	'end';

MoveAbsolute returns MoveAbsolute:
	{MoveAbsolute}
	'MoveAbsolute'
	'{'
		('x' x=EInt)?
		('y' y=EInt)?
		('z' z=EInt)?
		('speed' speed=EDouble)?
	'}';

ExecuteSequence returns ExecuteSequence:
	{ExecuteSequence}
	'ExecuteSequence'
	'{'
		('id' id=EInt)?
	'}';

Wait returns Wait:
	{Wait}
	'Wait'
	'{'
		('duration' duration=EDouble)?
	'}';

IsToolOn returns IsToolOn:
	{IsToolOn}
	(result?='result')?
	'IsToolOn'
	'{'
		('pin' pin=EInt)?
	'}';

SendMessage returns SendMessage:
	{SendMessage}
	'SendMessage'
	'{'
		('message' message=EString)?
	'}';

RunFarmware returns RunFarmware:
	{RunFarmware}
	'RunFarmware'
	name=EString;

TakePhoto returns TakePhoto:
	{TakePhoto}
	'TakePhoto'
	;

Schedule returns Schedule:
	{Schedule}
	(reapeat?='reapeat')?
	'Schedule'
	'{'
		('sequence' sequence=EString)?
		('startDate' startDate=EString)?
		('startTime' startTime=EString)?
		('repeatFrequency' repeatFrequency=EInt)?
		('repeatUnit' repeatUnit=EString)?
		('endDate' endDate=EString)?
		('endTime' endTime=EString)?
	'}';

ListPeripherals returns ListPeripherals:
	{ListPeripherals}
	'ListPeripherals'
	;

ListSequences returns ListSequences:
	{ListSequences}
	'ListSequences'
	;

EInt returns ecore::EInt:
	'-'? INT;

EDouble returns ecore::EDouble:
	'-'? INT? '.' INT (('E'|'e') '-'? INT)?;

EString returns ecore::EString:
	STRING | ID;

EBoolean returns ecore::EBoolean:
	'true' | 'false';

IsEqualTo returns IsEqualTo:
	{IsEqualTo}
	(result?='result')?
	'IsEqualTo'
	'{'
		('value' value=EInt)?
		('axe' axe=EString)?
	'}';

IsNotEqualTo returns IsNotEqualTo:
	{IsNotEqualTo}
	(result?='result')?
	'IsNotEqualTo'
	'{'
		('value' value=EInt)?
		('axe' axe=EString)?
	'}';

IsGreaterThan returns IsGreaterThan:
	{IsGreaterThan}
	(result?='result')?
	'IsGreaterThan'
	'{'
		('value' value=EInt)?
		('axe' axe=EString)?
	'}';

IsLowerThan returns IsLowerThan:
	{IsLowerThan}
	(result?='result')?
	'IsLowerThan'
	'{'
		('value' value=EInt)?
		('axe' axe=EString)?
	'}';
