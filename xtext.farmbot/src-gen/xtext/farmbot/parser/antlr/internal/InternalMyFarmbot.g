/*
 * generated by Xtext 2.15.0
 */
grammar InternalMyFarmbot;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package xtext.farmbot.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package xtext.farmbot.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import xtext.farmbot.services.MyFarmbotGrammarAccess;

}

@parser::members {

 	private MyFarmbotGrammarAccess grammarAccess;

    public InternalMyFarmbotParser(TokenStream input, MyFarmbotGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Farmbot";
   	}

   	@Override
   	protected MyFarmbotGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleFarmbot
entryRuleFarmbot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFarmbotRule()); }
	iv_ruleFarmbot=ruleFarmbot
	{ $current=$iv_ruleFarmbot.current; }
	EOF;

// Rule Farmbot
ruleFarmbot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFarmbotAccess().getFarmbotAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFarmbotAccess().getInstructionsInstructionParserRuleCall_1_0());
				}
				lv_instructions_1_0=ruleInstruction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFarmbotRule());
					}
					add(
						$current,
						"instructions",
						lv_instructions_1_0,
						"xtext.farmbot.MyFarmbot.Instruction");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleInstruction
entryRuleInstruction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstructionRule()); }
	iv_ruleInstruction=ruleInstruction
	{ $current=$iv_ruleInstruction.current; }
	EOF;

// Rule Instruction
ruleInstruction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getSequenceInstructionParserRuleCall_0());
		}
		this_SequenceInstruction_0=ruleSequenceInstruction
		{
			$current = $this_SequenceInstruction_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getSequenceParserRuleCall_1());
		}
		this_Sequence_1=ruleSequence
		{
			$current = $this_Sequence_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstructionAccess().getCommandParserRuleCall_2());
		}
		this_Command_2=ruleCommand
		{
			$current = $this_Command_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleCommand
entryRuleCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommandRule()); }
	iv_ruleCommand=ruleCommand
	{ $current=$iv_ruleCommand.current; }
	EOF;

// Rule Command
ruleCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCommandAccess().getScheduleParserRuleCall_0());
		}
		this_Schedule_0=ruleSchedule
		{
			$current = $this_Schedule_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getListSequencesParserRuleCall_1());
		}
		this_ListSequences_1=ruleListSequences
		{
			$current = $this_ListSequences_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getListScheduledEventsParserRuleCall_2());
		}
		this_ListScheduledEvents_2=ruleListScheduledEvents
		{
			$current = $this_ListScheduledEvents_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSequenceCommand
entryRuleSequenceCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSequenceCommandRule()); }
	iv_ruleSequenceCommand=ruleSequenceCommand
	{ $current=$iv_ruleSequenceCommand.current; }
	EOF;

// Rule SequenceCommand
ruleSequenceCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSequenceCommandAccess().getTurnOnDigitalParserRuleCall_0());
		}
		this_TurnOnDigital_0=ruleTurnOnDigital
		{
			$current = $this_TurnOnDigital_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSequenceCommandAccess().getTurnOnAnalogParserRuleCall_1());
		}
		this_TurnOnAnalog_1=ruleTurnOnAnalog
		{
			$current = $this_TurnOnAnalog_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSequenceCommandAccess().getTurnOffParserRuleCall_2());
		}
		this_TurnOff_2=ruleTurnOff
		{
			$current = $this_TurnOff_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSequenceCommandAccess().getMoveRelativeParserRuleCall_3());
		}
		this_MoveRelative_3=ruleMoveRelative
		{
			$current = $this_MoveRelative_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSequenceCommandAccess().getFindHomeParserRuleCall_4());
		}
		this_FindHome_4=ruleFindHome
		{
			$current = $this_FindHome_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSequenceCommandAccess().getMoveAbsoluteParserRuleCall_5());
		}
		this_MoveAbsolute_5=ruleMoveAbsolute
		{
			$current = $this_MoveAbsolute_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSequenceCommandAccess().getExecuteSequenceParserRuleCall_6());
		}
		this_ExecuteSequence_6=ruleExecuteSequence
		{
			$current = $this_ExecuteSequence_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSequenceCommandAccess().getWaitParserRuleCall_7());
		}
		this_Wait_7=ruleWait
		{
			$current = $this_Wait_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSequenceCommandAccess().getSendMessageParserRuleCall_8());
		}
		this_SendMessage_8=ruleSendMessage
		{
			$current = $this_SendMessage_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSequenceCommandAccess().getRunFarmwareParserRuleCall_9());
		}
		this_RunFarmware_9=ruleRunFarmware
		{
			$current = $this_RunFarmware_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSequenceCommandAccess().getTakePhotoParserRuleCall_10());
		}
		this_TakePhoto_10=ruleTakePhoto
		{
			$current = $this_TakePhoto_10.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSequenceInstruction
entryRuleSequenceInstruction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSequenceInstructionRule()); }
	iv_ruleSequenceInstruction=ruleSequenceInstruction
	{ $current=$iv_ruleSequenceInstruction.current; }
	EOF;

// Rule SequenceInstruction
ruleSequenceInstruction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSequenceInstructionAccess().getIfParserRuleCall_0());
		}
		this_If_0=ruleIf
		{
			$current = $this_If_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSequenceInstructionAccess().getSequenceCommandParserRuleCall_1());
		}
		this_SequenceCommand_1=ruleSequenceCommand
		{
			$current = $this_SequenceCommand_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBooleanExpression
entryRuleBooleanExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanExpressionRule()); }
	iv_ruleBooleanExpression=ruleBooleanExpression
	{ $current=$iv_ruleBooleanExpression.current; }
	EOF;

// Rule BooleanExpression
ruleBooleanExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBooleanExpressionAccess().getIsEqualToParserRuleCall_0());
		}
		this_IsEqualTo_0=ruleIsEqualTo
		{
			$current = $this_IsEqualTo_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBooleanExpressionAccess().getIsNotEqualToParserRuleCall_1());
		}
		this_IsNotEqualTo_1=ruleIsNotEqualTo
		{
			$current = $this_IsNotEqualTo_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBooleanExpressionAccess().getIsGreaterThanParserRuleCall_2());
		}
		this_IsGreaterThan_2=ruleIsGreaterThan
		{
			$current = $this_IsGreaterThan_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBooleanExpressionAccess().getIsLowerThanParserRuleCall_3());
		}
		this_IsLowerThan_3=ruleIsLowerThan
		{
			$current = $this_IsLowerThan_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTurnOnDigital
entryRuleTurnOnDigital returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTurnOnDigitalRule()); }
	iv_ruleTurnOnDigital=ruleTurnOnDigital
	{ $current=$iv_ruleTurnOnDigital.current; }
	EOF;

// Rule TurnOnDigital
ruleTurnOnDigital returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTurnOnDigitalAccess().getTurnOnDigitalAction_0(),
					$current);
			}
		)
		otherlv_1='turnOnDigital('
		{
			newLeafNode(otherlv_1, grammarAccess.getTurnOnDigitalAccess().getTurnOnDigitalKeyword_1());
		}
		otherlv_2='pin'
		{
			newLeafNode(otherlv_2, grammarAccess.getTurnOnDigitalAccess().getPinKeyword_2());
		}
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getTurnOnDigitalAccess().getEqualsSignKeyword_3());
		}
		(
			(
				lv_pin_4_0=RULE_INT
				{
					newLeafNode(lv_pin_4_0, grammarAccess.getTurnOnDigitalAccess().getPinINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTurnOnDigitalRule());
					}
					setWithLastConsumed(
						$current,
						"pin",
						lv_pin_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getTurnOnDigitalAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleTurnOnAnalog
entryRuleTurnOnAnalog returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTurnOnAnalogRule()); }
	iv_ruleTurnOnAnalog=ruleTurnOnAnalog
	{ $current=$iv_ruleTurnOnAnalog.current; }
	EOF;

// Rule TurnOnAnalog
ruleTurnOnAnalog returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTurnOnAnalogAccess().getTurnOnAnalogAction_0(),
					$current);
			}
		)
		otherlv_1='turnOnAnalog('
		{
			newLeafNode(otherlv_1, grammarAccess.getTurnOnAnalogAccess().getTurnOnAnalogKeyword_1());
		}
		otherlv_2='pin'
		{
			newLeafNode(otherlv_2, grammarAccess.getTurnOnAnalogAccess().getPinKeyword_2());
		}
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getTurnOnAnalogAccess().getEqualsSignKeyword_3());
		}
		(
			(
				lv_pin_4_0=RULE_INT
				{
					newLeafNode(lv_pin_4_0, grammarAccess.getTurnOnAnalogAccess().getPinINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTurnOnAnalogRule());
					}
					setWithLastConsumed(
						$current,
						"pin",
						lv_pin_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getTurnOnAnalogAccess().getCommaKeyword_5());
		}
		otherlv_6='value'
		{
			newLeafNode(otherlv_6, grammarAccess.getTurnOnAnalogAccess().getValueKeyword_6());
		}
		otherlv_7='='
		{
			newLeafNode(otherlv_7, grammarAccess.getTurnOnAnalogAccess().getEqualsSignKeyword_7());
		}
		(
			(
				lv_value_8_0=RULE_INT
				{
					newLeafNode(lv_value_8_0, grammarAccess.getTurnOnAnalogAccess().getValueINTTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTurnOnAnalogRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_8_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_9=')'
		{
			newLeafNode(otherlv_9, grammarAccess.getTurnOnAnalogAccess().getRightParenthesisKeyword_9());
		}
	)
;

// Entry rule entryRuleTurnOff
entryRuleTurnOff returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTurnOffRule()); }
	iv_ruleTurnOff=ruleTurnOff
	{ $current=$iv_ruleTurnOff.current; }
	EOF;

// Rule TurnOff
ruleTurnOff returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTurnOffAccess().getTurnOffAction_0(),
					$current);
			}
		)
		otherlv_1='turnOff('
		{
			newLeafNode(otherlv_1, grammarAccess.getTurnOffAccess().getTurnOffKeyword_1());
		}
		otherlv_2='pin'
		{
			newLeafNode(otherlv_2, grammarAccess.getTurnOffAccess().getPinKeyword_2());
		}
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getTurnOffAccess().getEqualsSignKeyword_3());
		}
		(
			(
				lv_pin_4_0=RULE_INT
				{
					newLeafNode(lv_pin_4_0, grammarAccess.getTurnOffAccess().getPinINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTurnOffRule());
					}
					setWithLastConsumed(
						$current,
						"pin",
						lv_pin_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getTurnOffAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleMoveRelative
entryRuleMoveRelative returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMoveRelativeRule()); }
	iv_ruleMoveRelative=ruleMoveRelative
	{ $current=$iv_ruleMoveRelative.current; }
	EOF;

// Rule MoveRelative
ruleMoveRelative returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMoveRelativeAccess().getMoveRelativeAction_0(),
					$current);
			}
		)
		otherlv_1='moveRelative('
		{
			newLeafNode(otherlv_1, grammarAccess.getMoveRelativeAccess().getMoveRelativeKeyword_1());
		}
		otherlv_2='x'
		{
			newLeafNode(otherlv_2, grammarAccess.getMoveRelativeAccess().getXKeyword_2());
		}
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getMoveRelativeAccess().getEqualsSignKeyword_3());
		}
		(
			(
				lv_x_4_0=RULE_INT
				{
					newLeafNode(lv_x_4_0, grammarAccess.getMoveRelativeAccess().getXINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMoveRelativeRule());
					}
					setWithLastConsumed(
						$current,
						"x",
						lv_x_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getMoveRelativeAccess().getCommaKeyword_5());
		}
		otherlv_6='y'
		{
			newLeafNode(otherlv_6, grammarAccess.getMoveRelativeAccess().getYKeyword_6());
		}
		otherlv_7='='
		{
			newLeafNode(otherlv_7, grammarAccess.getMoveRelativeAccess().getEqualsSignKeyword_7());
		}
		(
			(
				lv_y_8_0=RULE_INT
				{
					newLeafNode(lv_y_8_0, grammarAccess.getMoveRelativeAccess().getYINTTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMoveRelativeRule());
					}
					setWithLastConsumed(
						$current,
						"y",
						lv_y_8_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_9=','
		{
			newLeafNode(otherlv_9, grammarAccess.getMoveRelativeAccess().getCommaKeyword_9());
		}
		otherlv_10='z'
		{
			newLeafNode(otherlv_10, grammarAccess.getMoveRelativeAccess().getZKeyword_10());
		}
		otherlv_11='='
		{
			newLeafNode(otherlv_11, grammarAccess.getMoveRelativeAccess().getEqualsSignKeyword_11());
		}
		(
			(
				lv_z_12_0=RULE_INT
				{
					newLeafNode(lv_z_12_0, grammarAccess.getMoveRelativeAccess().getZINTTerminalRuleCall_12_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMoveRelativeRule());
					}
					setWithLastConsumed(
						$current,
						"z",
						lv_z_12_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_13=','
		{
			newLeafNode(otherlv_13, grammarAccess.getMoveRelativeAccess().getCommaKeyword_13());
		}
		otherlv_14='speed'
		{
			newLeafNode(otherlv_14, grammarAccess.getMoveRelativeAccess().getSpeedKeyword_14());
		}
		otherlv_15='='
		{
			newLeafNode(otherlv_15, grammarAccess.getMoveRelativeAccess().getEqualsSignKeyword_15());
		}
		(
			(
				lv_speed_16_0=RULE_INT
				{
					newLeafNode(lv_speed_16_0, grammarAccess.getMoveRelativeAccess().getSpeedINTTerminalRuleCall_16_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMoveRelativeRule());
					}
					setWithLastConsumed(
						$current,
						"speed",
						lv_speed_16_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_17=')'
		{
			newLeafNode(otherlv_17, grammarAccess.getMoveRelativeAccess().getRightParenthesisKeyword_17());
		}
	)
;

// Entry rule entryRuleFindHome
entryRuleFindHome returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFindHomeRule()); }
	iv_ruleFindHome=ruleFindHome
	{ $current=$iv_ruleFindHome.current; }
	EOF;

// Rule FindHome
ruleFindHome returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFindHomeAccess().getFindHomeAction_0(),
					$current);
			}
		)
		otherlv_1='findHome('
		{
			newLeafNode(otherlv_1, grammarAccess.getFindHomeAccess().getFindHomeKeyword_1());
		}
		otherlv_2='axis'
		{
			newLeafNode(otherlv_2, grammarAccess.getFindHomeAccess().getAxisKeyword_2());
		}
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getFindHomeAccess().getEqualsSignKeyword_3());
		}
		(
			(
				lv_axis_4_0=RULE_STRING
				{
					newLeafNode(lv_axis_4_0, grammarAccess.getFindHomeAccess().getAxisSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFindHomeRule());
					}
					setWithLastConsumed(
						$current,
						"axis",
						lv_axis_4_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getFindHomeAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleSequence
entryRuleSequence returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSequenceRule()); }
	iv_ruleSequence=ruleSequence
	{ $current=$iv_ruleSequence.current; }
	EOF;

// Rule Sequence
ruleSequence returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSequenceAccess().getSequenceAction_0(),
					$current);
			}
		)
		otherlv_1='sequence'
		{
			newLeafNode(otherlv_1, grammarAccess.getSequenceAccess().getSequenceKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_STRING
				{
					newLeafNode(lv_name_2_0, grammarAccess.getSequenceAccess().getNameSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSequenceRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSequenceAccess().getSequenceInstructionsSequenceInstructionParserRuleCall_3_0());
				}
				lv_sequenceInstructions_3_0=ruleSequenceInstruction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSequenceRule());
					}
					add(
						$current,
						"sequenceInstructions",
						lv_sequenceInstructions_3_0,
						"xtext.farmbot.MyFarmbot.SequenceInstruction");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='end'
		{
			newLeafNode(otherlv_4, grammarAccess.getSequenceAccess().getEndKeyword_4());
		}
	)
;

// Entry rule entryRuleIf
entryRuleIf returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfRule()); }
	iv_ruleIf=ruleIf
	{ $current=$iv_ruleIf.current; }
	EOF;

// Rule If
ruleIf returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIfAccess().getIfAction_0(),
					$current);
			}
		)
		otherlv_1='if'
		{
			newLeafNode(otherlv_1, grammarAccess.getIfAccess().getIfKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfAccess().getBooleanExpressionBooleanExpressionParserRuleCall_2_0());
				}
				lv_booleanExpression_2_0=ruleBooleanExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfRule());
					}
					set(
						$current,
						"booleanExpression",
						lv_booleanExpression_2_0,
						"xtext.farmbot.MyFarmbot.BooleanExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='then'
		{
			newLeafNode(otherlv_3, grammarAccess.getIfAccess().getThenKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfAccess().getThenExecuteSequenceParserRuleCall_4_0());
				}
				lv_then_4_0=ruleExecuteSequence
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfRule());
					}
					set(
						$current,
						"then",
						lv_then_4_0,
						"xtext.farmbot.MyFarmbot.ExecuteSequence");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_5='else'
			{
				newLeafNode(otherlv_5, grammarAccess.getIfAccess().getElseKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIfAccess().getElseExecuteSequenceParserRuleCall_5_1_0());
					}
					lv_else_6_0=ruleExecuteSequence
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfRule());
						}
						set(
							$current,
							"else",
							lv_else_6_0,
							"xtext.farmbot.MyFarmbot.ExecuteSequence");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7='end'
		{
			newLeafNode(otherlv_7, grammarAccess.getIfAccess().getEndKeyword_6());
		}
	)
;

// Entry rule entryRuleMoveAbsolute
entryRuleMoveAbsolute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMoveAbsoluteRule()); }
	iv_ruleMoveAbsolute=ruleMoveAbsolute
	{ $current=$iv_ruleMoveAbsolute.current; }
	EOF;

// Rule MoveAbsolute
ruleMoveAbsolute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMoveAbsoluteAccess().getMoveAbsoluteAction_0(),
					$current);
			}
		)
		otherlv_1='moveAbsolute('
		{
			newLeafNode(otherlv_1, grammarAccess.getMoveAbsoluteAccess().getMoveAbsoluteKeyword_1());
		}
		otherlv_2='x'
		{
			newLeafNode(otherlv_2, grammarAccess.getMoveAbsoluteAccess().getXKeyword_2());
		}
		otherlv_3='='
		{
			newLeafNode(otherlv_3, grammarAccess.getMoveAbsoluteAccess().getEqualsSignKeyword_3());
		}
		(
			(
				lv_x_4_0=RULE_INT
				{
					newLeafNode(lv_x_4_0, grammarAccess.getMoveAbsoluteAccess().getXINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMoveAbsoluteRule());
					}
					setWithLastConsumed(
						$current,
						"x",
						lv_x_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getMoveAbsoluteAccess().getCommaKeyword_5());
		}
		otherlv_6='y'
		{
			newLeafNode(otherlv_6, grammarAccess.getMoveAbsoluteAccess().getYKeyword_6());
		}
		otherlv_7='='
		{
			newLeafNode(otherlv_7, grammarAccess.getMoveAbsoluteAccess().getEqualsSignKeyword_7());
		}
		(
			(
				lv_y_8_0=RULE_INT
				{
					newLeafNode(lv_y_8_0, grammarAccess.getMoveAbsoluteAccess().getYINTTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMoveAbsoluteRule());
					}
					setWithLastConsumed(
						$current,
						"y",
						lv_y_8_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_9=','
		{
			newLeafNode(otherlv_9, grammarAccess.getMoveAbsoluteAccess().getCommaKeyword_9());
		}
		otherlv_10='z'
		{
			newLeafNode(otherlv_10, grammarAccess.getMoveAbsoluteAccess().getZKeyword_10());
		}
		otherlv_11='='
		{
			newLeafNode(otherlv_11, grammarAccess.getMoveAbsoluteAccess().getEqualsSignKeyword_11());
		}
		(
			(
				lv_z_12_0=RULE_INT
				{
					newLeafNode(lv_z_12_0, grammarAccess.getMoveAbsoluteAccess().getZINTTerminalRuleCall_12_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMoveAbsoluteRule());
					}
					setWithLastConsumed(
						$current,
						"z",
						lv_z_12_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_13=','
		{
			newLeafNode(otherlv_13, grammarAccess.getMoveAbsoluteAccess().getCommaKeyword_13());
		}
		otherlv_14='speed'
		{
			newLeafNode(otherlv_14, grammarAccess.getMoveAbsoluteAccess().getSpeedKeyword_14());
		}
		otherlv_15='='
		{
			newLeafNode(otherlv_15, grammarAccess.getMoveAbsoluteAccess().getEqualsSignKeyword_15());
		}
		(
			(
				lv_speed_16_0=RULE_INT
				{
					newLeafNode(lv_speed_16_0, grammarAccess.getMoveAbsoluteAccess().getSpeedINTTerminalRuleCall_16_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMoveAbsoluteRule());
					}
					setWithLastConsumed(
						$current,
						"speed",
						lv_speed_16_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_17=')'
		{
			newLeafNode(otherlv_17, grammarAccess.getMoveAbsoluteAccess().getRightParenthesisKeyword_17());
		}
	)
;

// Entry rule entryRuleExecuteSequence
entryRuleExecuteSequence returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExecuteSequenceRule()); }
	iv_ruleExecuteSequence=ruleExecuteSequence
	{ $current=$iv_ruleExecuteSequence.current; }
	EOF;

// Rule ExecuteSequence
ruleExecuteSequence returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getExecuteSequenceAccess().getExecuteSequenceAction_0(),
					$current);
			}
		)
		otherlv_1='executeSequence'
		{
			newLeafNode(otherlv_1, grammarAccess.getExecuteSequenceAccess().getExecuteSequenceKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getExecuteSequenceAccess().getLeftParenthesisKeyword_2());
		}
		otherlv_3='id'
		{
			newLeafNode(otherlv_3, grammarAccess.getExecuteSequenceAccess().getIdKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getExecuteSequenceAccess().getEqualsSignKeyword_4());
		}
		(
			(
				lv_id_5_0=RULE_INT
				{
					newLeafNode(lv_id_5_0, grammarAccess.getExecuteSequenceAccess().getIdINTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExecuteSequenceRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_5_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getExecuteSequenceAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleWait
entryRuleWait returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWaitRule()); }
	iv_ruleWait=ruleWait
	{ $current=$iv_ruleWait.current; }
	EOF;

// Rule Wait
ruleWait returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getWaitAccess().getWaitAction_0(),
					$current);
			}
		)
		otherlv_1='wait'
		{
			newLeafNode(otherlv_1, grammarAccess.getWaitAccess().getWaitKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getWaitAccess().getLeftParenthesisKeyword_2());
		}
		otherlv_3='duration'
		{
			newLeafNode(otherlv_3, grammarAccess.getWaitAccess().getDurationKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getWaitAccess().getEqualsSignKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWaitAccess().getDurationEDoubleParserRuleCall_5_0());
				}
				lv_duration_5_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWaitRule());
					}
					set(
						$current,
						"duration",
						lv_duration_5_0,
						"xtext.farmbot.MyFarmbot.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getWaitAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleSendMessage
entryRuleSendMessage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSendMessageRule()); }
	iv_ruleSendMessage=ruleSendMessage
	{ $current=$iv_ruleSendMessage.current; }
	EOF;

// Rule SendMessage
ruleSendMessage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSendMessageAccess().getSendMessageAction_0(),
					$current);
			}
		)
		otherlv_1='sendMessage'
		{
			newLeafNode(otherlv_1, grammarAccess.getSendMessageAccess().getSendMessageKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getSendMessageAccess().getLeftParenthesisKeyword_2());
		}
		otherlv_3='type'
		{
			newLeafNode(otherlv_3, grammarAccess.getSendMessageAccess().getTypeKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getSendMessageAccess().getEqualsSignKeyword_4());
		}
		(
			(
				lv_messageType_5_0=RULE_STRING
				{
					newLeafNode(lv_messageType_5_0, grammarAccess.getSendMessageAccess().getMessageTypeSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSendMessageRule());
					}
					setWithLastConsumed(
						$current,
						"messageType",
						lv_messageType_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_6=','
		{
			newLeafNode(otherlv_6, grammarAccess.getSendMessageAccess().getCommaKeyword_6());
		}
		otherlv_7='message'
		{
			newLeafNode(otherlv_7, grammarAccess.getSendMessageAccess().getMessageKeyword_7());
		}
		otherlv_8='='
		{
			newLeafNode(otherlv_8, grammarAccess.getSendMessageAccess().getEqualsSignKeyword_8());
		}
		(
			(
				lv_message_9_0=RULE_STRING
				{
					newLeafNode(lv_message_9_0, grammarAccess.getSendMessageAccess().getMessageSTRINGTerminalRuleCall_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSendMessageRule());
					}
					setWithLastConsumed(
						$current,
						"message",
						lv_message_9_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_10=')'
		{
			newLeafNode(otherlv_10, grammarAccess.getSendMessageAccess().getRightParenthesisKeyword_10());
		}
	)
;

// Entry rule entryRuleRunFarmware
entryRuleRunFarmware returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRunFarmwareRule()); }
	iv_ruleRunFarmware=ruleRunFarmware
	{ $current=$iv_ruleRunFarmware.current; }
	EOF;

// Rule RunFarmware
ruleRunFarmware returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRunFarmwareAccess().getRunFarmwareAction_0(),
					$current);
			}
		)
		otherlv_1='runFarmware'
		{
			newLeafNode(otherlv_1, grammarAccess.getRunFarmwareAccess().getRunFarmwareKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getRunFarmwareAccess().getLeftParenthesisKeyword_2());
		}
		otherlv_3='name'
		{
			newLeafNode(otherlv_3, grammarAccess.getRunFarmwareAccess().getNameKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getRunFarmwareAccess().getEqualsSignKeyword_4());
		}
		(
			(
				lv_name_5_0=RULE_STRING
				{
					newLeafNode(lv_name_5_0, grammarAccess.getRunFarmwareAccess().getNameSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRunFarmwareRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getRunFarmwareAccess().getRightParenthesisKeyword_6());
		}
	)
;

// Entry rule entryRuleTakePhoto
entryRuleTakePhoto returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTakePhotoRule()); }
	iv_ruleTakePhoto=ruleTakePhoto
	{ $current=$iv_ruleTakePhoto.current; }
	EOF;

// Rule TakePhoto
ruleTakePhoto returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTakePhotoAccess().getTakePhotoAction_0(),
					$current);
			}
		)
		otherlv_1='takePhoto()'
		{
			newLeafNode(otherlv_1, grammarAccess.getTakePhotoAccess().getTakePhotoKeyword_1());
		}
	)
;

// Entry rule entryRuleSchedule
entryRuleSchedule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScheduleRule()); }
	iv_ruleSchedule=ruleSchedule
	{ $current=$iv_ruleSchedule.current; }
	EOF;

// Rule Schedule
ruleSchedule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getScheduleAccess().getScheduleAction_0(),
					$current);
			}
		)
		otherlv_1='schedule'
		{
			newLeafNode(otherlv_1, grammarAccess.getScheduleAccess().getScheduleKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getScheduleAccess().getLeftParenthesisKeyword_2());
		}
		otherlv_3='sequence'
		{
			newLeafNode(otherlv_3, grammarAccess.getScheduleAccess().getSequenceKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getScheduleAccess().getEqualsSignKeyword_4());
		}
		(
			(
				lv_sequence_5_0=RULE_STRING
				{
					newLeafNode(lv_sequence_5_0, grammarAccess.getScheduleAccess().getSequenceSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getScheduleRule());
					}
					setWithLastConsumed(
						$current,
						"sequence",
						lv_sequence_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_6=','
		{
			newLeafNode(otherlv_6, grammarAccess.getScheduleAccess().getCommaKeyword_6());
		}
		otherlv_7='startDate'
		{
			newLeafNode(otherlv_7, grammarAccess.getScheduleAccess().getStartDateKeyword_7());
		}
		otherlv_8='='
		{
			newLeafNode(otherlv_8, grammarAccess.getScheduleAccess().getEqualsSignKeyword_8());
		}
		(
			(
				lv_startDate_9_0=RULE_STRING
				{
					newLeafNode(lv_startDate_9_0, grammarAccess.getScheduleAccess().getStartDateSTRINGTerminalRuleCall_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getScheduleRule());
					}
					setWithLastConsumed(
						$current,
						"startDate",
						lv_startDate_9_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_10=','
		{
			newLeafNode(otherlv_10, grammarAccess.getScheduleAccess().getCommaKeyword_10());
		}
		otherlv_11='startTime'
		{
			newLeafNode(otherlv_11, grammarAccess.getScheduleAccess().getStartTimeKeyword_11());
		}
		otherlv_12='='
		{
			newLeafNode(otherlv_12, grammarAccess.getScheduleAccess().getEqualsSignKeyword_12());
		}
		(
			(
				lv_startTime_13_0=RULE_STRING
				{
					newLeafNode(lv_startTime_13_0, grammarAccess.getScheduleAccess().getStartTimeSTRINGTerminalRuleCall_13_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getScheduleRule());
					}
					setWithLastConsumed(
						$current,
						"startTime",
						lv_startTime_13_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_14=','
		{
			newLeafNode(otherlv_14, grammarAccess.getScheduleAccess().getCommaKeyword_14());
		}
		otherlv_15='repeat'
		{
			newLeafNode(otherlv_15, grammarAccess.getScheduleAccess().getRepeatKeyword_15());
		}
		otherlv_16='='
		{
			newLeafNode(otherlv_16, grammarAccess.getScheduleAccess().getEqualsSignKeyword_16());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getScheduleAccess().getRepeatEBooleanParserRuleCall_17_0());
				}
				lv_repeat_17_0=ruleEBoolean
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getScheduleRule());
					}
					set(
						$current,
						"repeat",
						lv_repeat_17_0,
						"xtext.farmbot.MyFarmbot.EBoolean");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_18=','
		{
			newLeafNode(otherlv_18, grammarAccess.getScheduleAccess().getCommaKeyword_18());
		}
		otherlv_19='repeatFrequency'
		{
			newLeafNode(otherlv_19, grammarAccess.getScheduleAccess().getRepeatFrequencyKeyword_19());
		}
		otherlv_20='='
		{
			newLeafNode(otherlv_20, grammarAccess.getScheduleAccess().getEqualsSignKeyword_20());
		}
		(
			(
				lv_repeatFrequency_21_0=RULE_INT
				{
					newLeafNode(lv_repeatFrequency_21_0, grammarAccess.getScheduleAccess().getRepeatFrequencyINTTerminalRuleCall_21_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getScheduleRule());
					}
					setWithLastConsumed(
						$current,
						"repeatFrequency",
						lv_repeatFrequency_21_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_22=','
		{
			newLeafNode(otherlv_22, grammarAccess.getScheduleAccess().getCommaKeyword_22());
		}
		otherlv_23='repeatUnit'
		{
			newLeafNode(otherlv_23, grammarAccess.getScheduleAccess().getRepeatUnitKeyword_23());
		}
		otherlv_24='='
		{
			newLeafNode(otherlv_24, grammarAccess.getScheduleAccess().getEqualsSignKeyword_24());
		}
		(
			(
				lv_repeatUnit_25_0=RULE_STRING
				{
					newLeafNode(lv_repeatUnit_25_0, grammarAccess.getScheduleAccess().getRepeatUnitSTRINGTerminalRuleCall_25_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getScheduleRule());
					}
					setWithLastConsumed(
						$current,
						"repeatUnit",
						lv_repeatUnit_25_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_26=','
		{
			newLeafNode(otherlv_26, grammarAccess.getScheduleAccess().getCommaKeyword_26());
		}
		otherlv_27='endDate'
		{
			newLeafNode(otherlv_27, grammarAccess.getScheduleAccess().getEndDateKeyword_27());
		}
		otherlv_28='='
		{
			newLeafNode(otherlv_28, grammarAccess.getScheduleAccess().getEqualsSignKeyword_28());
		}
		(
			(
				lv_endDate_29_0=RULE_STRING
				{
					newLeafNode(lv_endDate_29_0, grammarAccess.getScheduleAccess().getEndDateSTRINGTerminalRuleCall_29_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getScheduleRule());
					}
					setWithLastConsumed(
						$current,
						"endDate",
						lv_endDate_29_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_30=','
		{
			newLeafNode(otherlv_30, grammarAccess.getScheduleAccess().getCommaKeyword_30());
		}
		otherlv_31='endTime'
		{
			newLeafNode(otherlv_31, grammarAccess.getScheduleAccess().getEndTimeKeyword_31());
		}
		otherlv_32='='
		{
			newLeafNode(otherlv_32, grammarAccess.getScheduleAccess().getEqualsSignKeyword_32());
		}
		(
			(
				lv_endTime_33_0=RULE_STRING
				{
					newLeafNode(lv_endTime_33_0, grammarAccess.getScheduleAccess().getEndTimeSTRINGTerminalRuleCall_33_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getScheduleRule());
					}
					setWithLastConsumed(
						$current,
						"endTime",
						lv_endTime_33_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_34=')'
		{
			newLeafNode(otherlv_34, grammarAccess.getScheduleAccess().getRightParenthesisKeyword_34());
		}
	)
;

// Entry rule entryRuleListSequences
entryRuleListSequences returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListSequencesRule()); }
	iv_ruleListSequences=ruleListSequences
	{ $current=$iv_ruleListSequences.current; }
	EOF;

// Rule ListSequences
ruleListSequences returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getListSequencesAccess().getListSequencesAction_0(),
					$current);
			}
		)
		otherlv_1='listSequences()'
		{
			newLeafNode(otherlv_1, grammarAccess.getListSequencesAccess().getListSequencesKeyword_1());
		}
	)
;

// Entry rule entryRuleListScheduledEvents
entryRuleListScheduledEvents returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListScheduledEventsRule()); }
	iv_ruleListScheduledEvents=ruleListScheduledEvents
	{ $current=$iv_ruleListScheduledEvents.current; }
	EOF;

// Rule ListScheduledEvents
ruleListScheduledEvents returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getListScheduledEventsAccess().getListScheduledEventsAction_0(),
					$current);
			}
		)
		otherlv_1='listScheduledEvents()'
		{
			newLeafNode(otherlv_1, grammarAccess.getListScheduledEventsAccess().getListScheduledEventsKeyword_1());
		}
	)
;

// Entry rule entryRuleIsEqualTo
entryRuleIsEqualTo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIsEqualToRule()); }
	iv_ruleIsEqualTo=ruleIsEqualTo
	{ $current=$iv_ruleIsEqualTo.current; }
	EOF;

// Rule IsEqualTo
ruleIsEqualTo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIsEqualToAccess().getIsEqualToAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_axe_1_0=RULE_STRING
					{
						newLeafNode(lv_axe_1_0, grammarAccess.getIsEqualToAccess().getAxeSTRINGTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIsEqualToRule());
						}
						setWithLastConsumed(
							$current,
							"axe",
							lv_axe_1_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			    |
			(
				otherlv_2='pin'
				{
					newLeafNode(otherlv_2, grammarAccess.getIsEqualToAccess().getPinKeyword_1_1_0());
				}
				(
					(
						lv_pinNumber_3_0=RULE_INT
						{
							newLeafNode(lv_pinNumber_3_0, grammarAccess.getIsEqualToAccess().getPinNumberINTTerminalRuleCall_1_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getIsEqualToRule());
							}
							setWithLastConsumed(
								$current,
								"pinNumber",
								lv_pinNumber_3_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
			)
		)
		otherlv_4='is'
		{
			newLeafNode(otherlv_4, grammarAccess.getIsEqualToAccess().getIsKeyword_2());
		}
		otherlv_5='equal'
		{
			newLeafNode(otherlv_5, grammarAccess.getIsEqualToAccess().getEqualKeyword_3());
		}
		otherlv_6='to'
		{
			newLeafNode(otherlv_6, grammarAccess.getIsEqualToAccess().getToKeyword_4());
		}
		(
			(
				lv_value_7_0=RULE_INT
				{
					newLeafNode(lv_value_7_0, grammarAccess.getIsEqualToAccess().getValueINTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIsEqualToRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_7_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleIsNotEqualTo
entryRuleIsNotEqualTo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIsNotEqualToRule()); }
	iv_ruleIsNotEqualTo=ruleIsNotEqualTo
	{ $current=$iv_ruleIsNotEqualTo.current; }
	EOF;

// Rule IsNotEqualTo
ruleIsNotEqualTo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIsNotEqualToAccess().getIsNotEqualToAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_axe_1_0=RULE_STRING
					{
						newLeafNode(lv_axe_1_0, grammarAccess.getIsNotEqualToAccess().getAxeSTRINGTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIsNotEqualToRule());
						}
						setWithLastConsumed(
							$current,
							"axe",
							lv_axe_1_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			    |
			(
				otherlv_2='pin'
				{
					newLeafNode(otherlv_2, grammarAccess.getIsNotEqualToAccess().getPinKeyword_1_1_0());
				}
				(
					(
						lv_pinNumber_3_0=RULE_INT
						{
							newLeafNode(lv_pinNumber_3_0, grammarAccess.getIsNotEqualToAccess().getPinNumberINTTerminalRuleCall_1_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getIsNotEqualToRule());
							}
							setWithLastConsumed(
								$current,
								"pinNumber",
								lv_pinNumber_3_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
			)
		)
		otherlv_4='is'
		{
			newLeafNode(otherlv_4, grammarAccess.getIsNotEqualToAccess().getIsKeyword_2());
		}
		otherlv_5='not'
		{
			newLeafNode(otherlv_5, grammarAccess.getIsNotEqualToAccess().getNotKeyword_3());
		}
		otherlv_6='equal'
		{
			newLeafNode(otherlv_6, grammarAccess.getIsNotEqualToAccess().getEqualKeyword_4());
		}
		otherlv_7='to'
		{
			newLeafNode(otherlv_7, grammarAccess.getIsNotEqualToAccess().getToKeyword_5());
		}
		(
			(
				lv_value_8_0=RULE_INT
				{
					newLeafNode(lv_value_8_0, grammarAccess.getIsNotEqualToAccess().getValueINTTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIsNotEqualToRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_8_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleIsGreaterThan
entryRuleIsGreaterThan returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIsGreaterThanRule()); }
	iv_ruleIsGreaterThan=ruleIsGreaterThan
	{ $current=$iv_ruleIsGreaterThan.current; }
	EOF;

// Rule IsGreaterThan
ruleIsGreaterThan returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIsGreaterThanAccess().getIsGreaterThanAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_axe_1_0=RULE_STRING
					{
						newLeafNode(lv_axe_1_0, grammarAccess.getIsGreaterThanAccess().getAxeSTRINGTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIsGreaterThanRule());
						}
						setWithLastConsumed(
							$current,
							"axe",
							lv_axe_1_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			    |
			(
				otherlv_2='pin'
				{
					newLeafNode(otherlv_2, grammarAccess.getIsGreaterThanAccess().getPinKeyword_1_1_0());
				}
				(
					(
						lv_pinNumber_3_0=RULE_INT
						{
							newLeafNode(lv_pinNumber_3_0, grammarAccess.getIsGreaterThanAccess().getPinNumberINTTerminalRuleCall_1_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getIsGreaterThanRule());
							}
							setWithLastConsumed(
								$current,
								"pinNumber",
								lv_pinNumber_3_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
			)
		)
		otherlv_4='is'
		{
			newLeafNode(otherlv_4, grammarAccess.getIsGreaterThanAccess().getIsKeyword_2());
		}
		otherlv_5='greater'
		{
			newLeafNode(otherlv_5, grammarAccess.getIsGreaterThanAccess().getGreaterKeyword_3());
		}
		otherlv_6='than'
		{
			newLeafNode(otherlv_6, grammarAccess.getIsGreaterThanAccess().getThanKeyword_4());
		}
		(
			(
				lv_value_7_0=RULE_INT
				{
					newLeafNode(lv_value_7_0, grammarAccess.getIsGreaterThanAccess().getValueINTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIsGreaterThanRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_7_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleIsLowerThan
entryRuleIsLowerThan returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIsLowerThanRule()); }
	iv_ruleIsLowerThan=ruleIsLowerThan
	{ $current=$iv_ruleIsLowerThan.current; }
	EOF;

// Rule IsLowerThan
ruleIsLowerThan returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIsLowerThanAccess().getIsLowerThanAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_axe_1_0=RULE_STRING
					{
						newLeafNode(lv_axe_1_0, grammarAccess.getIsLowerThanAccess().getAxeSTRINGTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIsLowerThanRule());
						}
						setWithLastConsumed(
							$current,
							"axe",
							lv_axe_1_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			    |
			(
				otherlv_2='pin'
				{
					newLeafNode(otherlv_2, grammarAccess.getIsLowerThanAccess().getPinKeyword_1_1_0());
				}
				(
					(
						lv_pinNumber_3_0=RULE_INT
						{
							newLeafNode(lv_pinNumber_3_0, grammarAccess.getIsLowerThanAccess().getPinNumberINTTerminalRuleCall_1_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getIsLowerThanRule());
							}
							setWithLastConsumed(
								$current,
								"pinNumber",
								lv_pinNumber_3_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
			)
		)
		otherlv_4='is'
		{
			newLeafNode(otherlv_4, grammarAccess.getIsLowerThanAccess().getIsKeyword_2());
		}
		otherlv_5='lower'
		{
			newLeafNode(otherlv_5, grammarAccess.getIsLowerThanAccess().getLowerKeyword_3());
		}
		otherlv_6='than'
		{
			newLeafNode(otherlv_6, grammarAccess.getIsLowerThanAccess().getThanKeyword_4());
		}
		(
			(
				lv_value_7_0=RULE_INT
				{
					newLeafNode(lv_value_7_0, grammarAccess.getIsLowerThanAccess().getValueINTTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIsLowerThanRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_7_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleEDouble
entryRuleEDouble returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEDoubleRule()); }
	iv_ruleEDouble=ruleEDouble
	{ $current=$iv_ruleEDouble.current.getText(); }
	EOF;

// Rule EDouble
ruleEDouble returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_0());
			}
		)?
		(
			this_INT_1=RULE_INT
			{
				$current.merge(this_INT_1);
			}
			{
				newLeafNode(this_INT_1, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_1());
			}
		)?
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEDoubleAccess().getFullStopKeyword_2());
		}
		this_INT_3=RULE_INT
		{
			$current.merge(this_INT_3);
		}
		{
			newLeafNode(this_INT_3, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_3());
		}
		(
			(
				kw='E'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getEKeyword_4_0_0());
				}
				    |
				kw='e'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getEKeyword_4_0_1());
				}
			)
			(
				kw='-'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_4_1());
				}
			)?
			this_INT_7=RULE_INT
			{
				$current.merge(this_INT_7);
			}
			{
				newLeafNode(this_INT_7, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_4_2());
			}
		)?
	)
;

// Entry rule entryRuleEBoolean
entryRuleEBoolean returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEBooleanRule()); }
	iv_ruleEBoolean=ruleEBoolean
	{ $current=$iv_ruleEBoolean.current.getText(); }
	EOF;

// Rule EBoolean
ruleEBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='true'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEBooleanAccess().getTrueKeyword_0());
		}
		    |
		kw='false'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEBooleanAccess().getFalseKeyword_1());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
