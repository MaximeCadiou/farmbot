/*
 * generated by Xtext 2.15.0
 */
package xtext.farmbot.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import farmbot.modeling.farmbot_modeling.Farmbot
import farmbot.modeling.farmbot_modeling.Instruction
import farmbot.modeling.farmbot_modeling.Command
import farmbot.modeling.farmbot_modeling.SequenceCommand
import farmbot.modeling.farmbot_modeling.SequenceInstruction
import farmbot.modeling.farmbot_modeling.BooleanExpression
import farmbot.modeling.farmbot_modeling.TurnOn
import farmbot.modeling.farmbot_modeling.TurnOff
import farmbot.modeling.farmbot_modeling.MoveRelative
import farmbot.modeling.farmbot_modeling.MoveAbsolute
import farmbot.modeling.farmbot_modeling.FindHome
import farmbot.modeling.farmbot_modeling.Sequence
import farmbot.modeling.farmbot_modeling.If
import farmbot.modeling.farmbot_modeling.ExecuteSequence
import farmbot.modeling.farmbot_modeling.Wait
import farmbot.modeling.farmbot_modeling.IsToolOn
import farmbot.modeling.farmbot_modeling.SendMessage
import farmbot.modeling.farmbot_modeling.RunFarmware
import farmbot.modeling.farmbot_modeling.TakePhoto
import farmbot.modeling.farmbot_modeling.Schedule
import farmbot.modeling.farmbot_modeling.ListPeripherals
import farmbot.modeling.farmbot_modeling.ListSequences
import farmbot.modeling.farmbot_modeling.IsEqualTo
import farmbot.modeling.farmbot_modeling.IsGreaterThan
import farmbot.modeling.farmbot_modeling.IsNotEqualTo
import farmbot.modeling.farmbot_modeling.IsLowerThan
import farmbot.modeling.farmbot_modeling.Move

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class MyFarmbotGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		fsa.generateFile('farmbot/Farmbot.java',
			resource.allContents
				.filter(Farmbot)
				.head
				.compile)
	}
	
	def dispatch compile(Farmbot farmbot) ''' 
	    package farmbot;
	        
	    public class Farmbot {
	    	public static void main(String[] args) {
		    	«FOR instruction:farmbot.instructions»
		            «instruction.compile»
	    	    «ENDFOR»
	    	}
	    }
	'''
	
	def dispatch compile(Instruction instruction) '''this expression is not supported: '''

	def dispatch compile(Command command) '''this expression is not supported: '''

	def dispatch compile(SequenceCommand sequenceCommad) '''this expression is not supported: '''

	def dispatch compile(SequenceInstruction sequenceInstruction) '''this expression is not supported: '''

	def dispatch compile(BooleanExpression booleanExpression) '''«booleanExpression.result»'''

	def dispatch compile(TurnOn turnon) '''
		System.out.println("I turned «turnon.pin» on with mode «turnon.mode»");
	'''

	def dispatch compile(TurnOff turnoff) '''
		System.out.println("I turned «turnoff.pin» off with mode «turnoff.mode»");
	'''

	def dispatch compile(Move move) '''this expression is not supported: '''

	def dispatch compile(MoveRelative move) '''
		System.out.println("I moved relatively with coordinates («move.x», «move.y», «move.z») at speed «move.speed»");
	'''

	def dispatch compile(MoveAbsolute move) '''
		System.out.println("I moved absolutely with coordinates («move.x», «move.y», «move.z») at speed «move.speed»");
	'''
	
	def dispatch compile(FindHome findHome)'''
		«IF findHome.findX»
			System.out.println("I found home x coordinate: 0");
		«ENDIF»
		«IF findHome.findY»
			System.out.println("I found home y coordinate: 0");
		«ENDIF»
		«IF findHome.findZ»
			System.out.println("I found home z coordinate: 0");
		«ENDIF»
	'''
	
	def dispatch compile(Sequence sequence) '''
		«FOR instruction:sequence.sequenceInstructions»
            «instruction.compile»
        «ENDFOR»
	'''

	def dispatch compile(If ifExpression) '''
		if («ifExpression.booleanExpression.compile») {
			«ifExpression.then.compile»
		} «IF ifExpression.getElse() !== null» else {
			«ifExpression.getElse().compile»
		«ENDIF»
		}
	'''

	def dispatch compile(ExecuteSequence executeSequence) '''
		System.out.println("I executed sequence «executeSequence.id»");
	'''

	def dispatch compile(Wait wait) '''
		System.out.println("I waited «wait.duration» seconds");
	'''

	def dispatch compile(IsToolOn isToolOn) '''true'''

	def dispatch compile(SendMessage sendMessage) '''
		System.out.println("I sent the following message «sendMessage.message»");
	'''

	def dispatch compile(RunFarmware runFarmware) '''
		System.out.println("I ran the farmware «runFarmware.name»");
	'''

	def dispatch compile(TakePhoto takePhoto) '''
		System.out.println("I took a photo");
	'''
	
	def dispatch compile(Schedule schedule) '''
		System.out.println("I scheduled the sequence «schedule.sequence» on «schedule.startDate» at «schedule.startTime»");
		«IF schedule.repeat»
			System.out.println("It will repeat every «schedule.repeatFrequency» «schedule.repeatUnit» until «schedule.endDate» at «schedule.endTime»");
		«ENDIF»
	'''

	def dispatch compile(ListPeripherals listPeripherals) '''
		System.out.println("Here is a list of the peripherals");
	'''

	def dispatch compile(ListSequences listSequences) '''
		System.out.println("Here is a list of the sequences");
	 '''
	
	def dispatch compile(IsEqualTo isEqualTo){
		var x = 2;
		
		'''«x» == «isEqualTo.value»'''	
	}

	def dispatch compile(IsNotEqualTo isNotEqualTo){
		var x = 2;
		
		'''«x» != «isNotEqualTo.value»'''	
	}
	
	def dispatch compile(IsGreaterThan isGreaterThan){
		var x = 2;
		
		'''«x» > «isGreaterThan.value»'''	
	}

	def dispatch compile(IsLowerThan isLowerThan){
		var x = 2;
		
		'''«x» < «isLowerThan.value»'''	
	}


}
